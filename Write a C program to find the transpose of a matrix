#include <stdio.h>

// Function to find the transpose of a matrix
void transposeMatrix(int original[][10], int transpose[][10], int rows, int cols) {
    // Loop through the original matrix
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            transpose[j][i] = original[i][j];  // Swap rows and columns
        }
    }
}

// Function to print a matrix
void printMatrix(int matrix[][10], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int original[10][10], transpose[10][10];
    int rows, cols;

    // Ask user for the number of rows and columns of the matrix
    printf("Enter the number of rows: ");
    scanf("%d", &rows);
    printf("Enter the number of columns: ");
    scanf("%d", &cols);

    // Input elements of the matrix
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &original[i][j]);
        }
    }

    // Call the transposeMatrix function to compute the transpose
    transposeMatrix(original, transpose, rows, cols);

    // Print the original matrix
    printf("Original matrix:\n");
    printMatrix(original, rows, cols);

    // Print the transposed matrix
    printf("Transposed matrix:\n");
    printMatrix(transpose, cols, rows);

    return 0;
}
