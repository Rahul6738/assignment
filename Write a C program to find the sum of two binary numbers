#include <stdio.h>
#include <string.h>

// Function to add two binary numbers
void addBinary(char binary1[], char binary2[], char result[]) {
    int i, j, carry = 0;
    int len1 = strlen(binary1);
    int len2 = strlen(binary2);
    
    // Start from the last digit of both numbers
    i = len1 - 1;
    j = len2 - 1;
    
    // Traverse both binary numbers from the end
    int k = 0;
    while (i >= 0 || j >= 0 || carry) {
        int bit1 = (i >= 0) ? binary1[i] - '0' : 0;  // Get bit from binary1 or 0 if out of range
        int bit2 = (j >= 0) ? binary2[j] - '0' : 0;  // Get bit from binary2 or 0 if out of range
        
        // Sum of bits and carry
        int sum = bit1 + bit2 + carry;
        
        // Store the result of sum mod 2 (0 or 1)
        result[k++] = (sum % 2) + '0';
        
        // Calculate the new carry
        carry = sum / 2;
        
        i--;
        j--;
    }
    
    // Null terminate the result string
    result[k] = '\0';
    
    // Reverse the result as we filled it from least significant bit
    for (int m = 0; m < k / 2; m++) {
        char temp = result[m];
        result[m] = result[k - m - 1];
        result[k - m - 1] = temp;
    }
}

int main() {
    char binary1[65], binary2[65], result[67];  // Arrays to hold binary numbers and result (max 64 bits + carry)
    
    // Ask user for two binary nu
