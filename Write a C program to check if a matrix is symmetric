#include <stdio.h>

#define MAX 10  // Maximum size of the matrix

// Function to check if a matrix is symmetric
int isSymmetric(int matrix[MAX][MAX], int n) {
    // Check if the matrix is equal to its transpose
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {  // Check only the upper triangular part
            if (matrix[i][j] != matrix[j][i]) {
                return 0;  // If any element is not equal to its transpose, it's not symmetric
            }
        }
    }
    return 1;  // If no mismatches, the matrix is symmetric
}

// Function to read a matrix from the user
void readMatrix(int matrix[MAX][MAX], int n) {
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &matrix[i][j]);
        }
    }
}

// Function to print a matrix
void printMatrix(int matrix[MAX][MAX], int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int n;
    int matrix[MAX][MAX];

    // Ask user for the size of the matrix (n x n)
    printf("Enter the size of the matrix (n x n): ");
    scanf("%d", &n);

    // Ensure that the matrix size is valid
    if (n <= 0 || n > MAX) {
        printf("Invalid size! Please enter a value between 1 and %d.\n", MAX);
        return 1;
    }

    // Read the matrix from the user
    readMatrix(matrix, n);

    // Print the matrix
    printf("Entered matrix is:\n");
    printMatrix(matrix, n);

    // Check if the matrix is symmetric
    if (isSymmetric(matrix, n)) {
        printf("The matrix is symmetric.\n");
    } else {
        printf("The matrix is not symmetric.\n");
    }

    return 0;
}
