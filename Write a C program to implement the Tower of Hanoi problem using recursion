#include <stdio.h>

// Recursive function to solve the Tower of Hanoi problem
void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    // Base case: if there is only one disc, just move it from source to destination
    if (n == 1) {
        printf("Move disc 1 from %c to %c\n", source, destination);
        return;
    }
    
    // Move n-1 discs from source to auxiliary, using destination as auxiliary
    towerOfHanoi(n - 1, source, destination, auxiliary);
    
    // Move the nth disc from source to destination
    printf("Move disc %d from %c to %c\n", n, source, destination);
    
    // Move n-1 discs from auxiliary to destination, using source as auxiliary
    towerOfHanoi(n - 1, auxiliary, source, destination);
}

int main() {
    int n;

    // Ask the user for the number of discs
    printf("Enter the number of discs: ");
    scanf("%d", &n);

    // Call the recursive function to solve the Tower of Hanoi
    printf("The moves required to solve the Tower of Hanoi are:\n");
    towerOfHanoi(n, 'A', 'B', 'C');  // 'A' is source, 'B' is auxiliary, 'C' is destination

    return 0;
}
